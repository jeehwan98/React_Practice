{"ast":null,"code":"var _jsxFileName = \"/Users/coding_files/PROJECTS/21_Routing_2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { Link, useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport EventItem from '../components/EventItem.js';\nimport EventsList from '../components/EventsList.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  // const data = useRouteLoaderData('event-detail');\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    // const data = await response.json(); // Parse the JSON response\n    // console.log('Fetched data:', data.event);\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    // return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader({\n  request,\n  params\n}) {\n  // object contains 2 important pieces 1. request, 2. params\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\n\n// after stating the loader function, we have to state it in the root component, which is the App.js\n\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method // logic writthen in `EventItem` component\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","Link","useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/coding_files/PROJECTS/21_Routing_2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Suspense } from 'react';\nimport { Link, useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport EventItem from '../components/EventItem.js';\nimport EventsList from '../components/EventsList.js';\n\nfunction EventDetailPage() {\n    // const data = useRouteLoaderData('event-detail');\n    const { event, events } = useRouteLoaderData('event-detail');\n\n    return (\n        <>\n            <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n                <Await resolve={event}>\n                    {loadedEvent => <EventItem event={loadedEvent} />}\n                </Await>\n            </Suspense>\n            <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n                <Await resolve={events}>\n                    {loadedEvents => <EventsList events={loadedEvents} />}\n                </Await>\n            </Suspense>\n        </>\n    )\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if (!response.ok) {\n        throw json({ message: 'Could not fetch details for selected event.' },\n            {\n                status: 500\n            }\n        )\n    } else {\n        // const data = await response.json(); // Parse the JSON response\n        // console.log('Fetched data:', data.event);\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        throw json({ message: 'Could not fetch events.' },\n            {\n                status: 500\n            },\n        );\n    } else {\n        // return response;\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\nexport function loader({ request, params }) { // object contains 2 important pieces 1. request, 2. params\n    const id = params.eventId;\n\n    return defer({\n        event: loadEvent(id),\n        events: loadEvents(),\n    });\n}\n\n// after stating the loader function, we have to state it in the root component, which is the App.js\n\n\nexport async function action({ params, request }) {\n    const eventId = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\n        method: request.method, // logic writthen in `EventItem` component\n    });\n\n    if (!response.ok) {\n        throw json(\n            { message: 'Could not delete event.' },\n            {\n                status: 500\n            }\n        );\n    }\n    return redirect('/events');\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}