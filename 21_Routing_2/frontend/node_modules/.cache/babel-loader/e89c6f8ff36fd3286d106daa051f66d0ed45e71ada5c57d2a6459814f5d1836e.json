{"ast":null,"code":"var _jsxFileName = \"/Users/coding_files/PROJECTS/21_Routing_2/frontend/src/pages/NewEvent.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  function submitHandler(event) {\n    event.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  // this code executes in the browser\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    description: data.get('description'),\n    date: data.get('date')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json' // so that data is handled and extracted correctly on the backend\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    // ...\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","submitHandler","event","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","description","date","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/Users/coding_files/PROJECTS/21_Routing_2/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nfunction NewEventPage() {\n    function submitHandler(event) {\n        event.preventDefault();\n    }\n    return (\n        <EventForm />\n    )\n}\n\nexport default NewEventPage;\n\nexport async function action({ request, params }) { // this code executes in the browser\n    const data = await request.formData();\n\n    const eventData = {\n        title: data.get('title'),\n        image: data.get('image'),\n        description: data.get('description'),\n        date: data.get('date'),\n    }\n\n    const response = await fetch('http://localhost:8080/events', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json' // so that data is handled and extracted correctly on the backend\n        },\n        body: JSON.stringify(eventData)\n    });\n\n    if (!response.ok) {\n        // ...\n        throw json({ message: 'Could not save event.' }, {\n            status: 500\n        });\n    } else {\n        return redirect;\n    }\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACpB,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B;EACA,oBACIJ,OAAA,CAACF,SAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB;AAACC,EAAA,GAPQR,YAAY;AASrB,eAAeA,YAAY;AAE3B,OAAO,eAAeS,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAAE;EAChD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,WAAW,EAAEN,IAAI,CAACI,GAAG,CAAC,aAAa,CAAC;IACpCG,IAAI,EAAEP,IAAI,CAACI,GAAG,CAAC,MAAM;EACzB,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB,CAAC;IACvC,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACd;IACA,MAAMhC,IAAI,CAAC;MAAEiC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAC7CC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC,MAAM;IACH,OAAOjC,QAAQ;EACnB;AACJ;AAAC,IAAAY,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}