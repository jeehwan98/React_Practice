{"ast":null,"code":"var _jsxFileName = \"/Users/coding_files/PROJECTS/21_Routing_2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Link, useLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  // const params = useParams();\n  console.log('EventDetailPage', data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"..\",\n          relative: \"path\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\n\n// export async function loader({ request, params }) { // object contains 2 important pieces 1. request, 2. params\n//     const id = params.eventId;\n\n//     const response = await fetch('http://localhost:8080/events/' + id);\n\n//     if (!response.ok) {\n//         throw json({ message: 'Could not fetch details for selected event.' },\n//             {\n//                 status: 500\n//             },\n//         );\n//     } else {\n//         // const data = await response.json(); // Parse the JSON response\n//         // console.log('Fetched data:', data.event);\n//         return response;\n//     }\n// }\n\n// after stating the loader function, we have to state it in the root component, which is the App.js\n\nexport async function loader({\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  }\n  const data = await response.json(); // Parse the JSON response\n  return {\n    event: data\n  }; // Return the data in the expected structure\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Link","useLoaderData","json","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","console","log","children","to","relative","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","params","id","eventId","response","fetch","ok","message","status","event","$RefreshReg$"],"sources":["/Users/coding_files/PROJECTS/21_Routing_2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Link, useLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem.js';\n\nfunction EventDetailPage() {\n    const data = useLoaderData();\n    // const params = useParams();\n    console.log('EventDetailPage', data);\n\n    return (\n        <>\n            {/* <EventItem event={data.event} /> */}\n            <p>\n                <button>\n                    <Link to='..' relative=\"path\">Back</Link>\n                </button>\n            </p>\n        </>\n\n    )\n}\n\nexport default EventDetailPage;\n\n// export async function loader({ request, params }) { // object contains 2 important pieces 1. request, 2. params\n//     const id = params.eventId;\n\n//     const response = await fetch('http://localhost:8080/events/' + id);\n\n//     if (!response.ok) {\n//         throw json({ message: 'Could not fetch details for selected event.' },\n//             {\n//                 status: 500\n//             },\n//         );\n//     } else {\n//         // const data = await response.json(); // Parse the JSON response\n//         // console.log('Fetched data:', data.event);\n//         return response;\n//     }\n// }\n\n// after stating the loader function, we have to state it in the root component, which is the App.js\n\nexport async function loader({ params }) {\n    const id = params.eventId;\n\n    const response = await fetch(`http://localhost:8080/events/${id}`);\n\n    if (!response.ok) {\n        throw json({ message: 'Could not fetch details for selected event.' }, { status: 500 });\n    }\n\n    const data = await response.json(); // Parse the JSON response\n    return { event: data }; // Return the data in the expected structure\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAC5D,OAAOC,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B;EACAU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;EAEpC,oBACIL,OAAA,CAAAE,SAAA;IAAAM,QAAA,eAEIR,OAAA;MAAAQ,QAAA,eACIR,OAAA;QAAAQ,QAAA,eACIR,OAAA,CAACL,IAAI;UAACc,EAAE,EAAC,IAAI;UAACC,QAAQ,EAAC,MAAM;UAAAF,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACN,CAAC;AAGX;AAACV,EAAA,CAhBQD,eAAe;EAAA,QACPP,aAAa;AAAA;AAAAmB,EAAA,GADrBZ,eAAe;AAkBxB,eAAeA,eAAe;;AAE9B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,eAAea,MAAMA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACrC,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCH,EAAE,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMzB,IAAI,CAAC;MAAE0B,OAAO,EAAE;IAA8C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3F;EAEA,MAAMnB,IAAI,GAAG,MAAMe,QAAQ,CAACvB,IAAI,CAAC,CAAC,CAAC,CAAC;EACpC,OAAO;IAAE4B,KAAK,EAAEpB;EAAK,CAAC,CAAC,CAAC;AAC5B;AAAC,IAAAU,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}