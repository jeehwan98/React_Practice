{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Link, useLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem.js';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event\n  } = useLoaderData();\n  console.log('EventDetailPage', event);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(EventDetailPage, \"aSDW1xvoNF3zHawQylAegsUS6e4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  // object contains 2 important pieces 1. request, 2. params\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    // const data = await response.json(); // Parse the JSON response\n    // console.log('Fetched data:', data.event);\n    // return response;\n    const data = await response.json();\n    return {\n      event: data\n    };\n    // return data;\n  }\n}\n\n// after stating the loader function, we have to state it in the root component, which is the App.js\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Link","useLoaderData","json","EventItem","Fragment","_Fragment","jsxDEV","_jsxDEV","EventDetailPage","_s","event","console","log","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","data","$RefreshReg$"],"sources":["/Users/coding_files/PROJECTS/21_Routing_2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Link, useLoaderData, json } from 'react-router-dom';\nimport EventItem from '../components/EventItem.js';\n\nfunction EventDetailPage() {\n    const { event } = useLoaderData();\n    console.log('EventDetailPage', event);\n\n    return (\n        <>\n            {/* <EventItem event={data.event} /> */}\n            {/* <p>\n                <button>\n                    <Link to='..' relative=\"path\">Back</Link>\n                </button>\n            </p> */}\n        </>\n    )\n}\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) { // object contains 2 important pieces 1. request, 2. params\n    const id = params.eventId;\n\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if (!response.ok) {\n        throw json({ message: 'Could not fetch details for selected event.' },\n            {\n                status: 500\n            }\n        )\n    } else {\n        // const data = await response.json(); // Parse the JSON response\n        // console.log('Fetched data:', data.event);\n        // return response;\n        const data = await response.json();\n        return { event: data };\n        // return data;\n    }\n}\n\n// after stating the loader function, we have to state it in the root component, which is the App.js\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAC5D,OAAOC,SAAS,MAAM,4BAA4B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAM,CAAC,GAAGT,aAAa,CAAC,CAAC;EACjCU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;EAErC,oBACIH,OAAA,CAAAF,SAAA,mBAOE,CAAC;AAEX;AAACI,EAAA,CAdQD,eAAe;EAAA,QACFP,aAAa;AAAA;AAAAY,EAAA,GAD1BL,eAAe;AAgBxB,eAAeA,eAAe;AAE9B,OAAO,eAAeM,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMnB,IAAI,CAAC;MAAEoB,OAAO,EAAE;IAA8C,CAAC,EACjE;MACIC,MAAM,EAAE;IACZ,CACJ,CAAC;EACL,CAAC,MAAM;IACH;IACA;IACA;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACjB,IAAI,CAAC,CAAC;IAClC,OAAO;MAAEQ,KAAK,EAAEc;IAAK,CAAC;IACtB;EACJ;AACJ;;AAEA;AAAA,IAAAX,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}