{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './auth.js';\nimport counterSlice from './counter.js';\n\n// configureStore method: helps us to combine lots of states into one global reducer\nconst store = configureStore({\n  reducer: {\n    // store has to have only 1 root reducer\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store; // export so that we can use logic outside of this file","map":{"version":3,"names":["configureStore","authSlice","counterSlice","store","reducer","counter","auth","counterActions","actions","authActions"],"sources":["/Users/coding_files/PROJECTS/20_Redux_Project/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport authSlice from './auth.js';\nimport counterSlice from './counter.js';\n\n// configureStore method: helps us to combine lots of states into one global reducer\nconst store = configureStore({\n    reducer: { // store has to have only 1 root reducer\n        counter: counterSlice.reducer,\n        auth: authSlice.reducer\n    }\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store; // export so that we can use logic outside of this file"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,YAAY,MAAM,cAAc;;AAEvC;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EACzBI,OAAO,EAAE;IAAE;IACPC,OAAO,EAAEH,YAAY,CAACE,OAAO;IAC7BE,IAAI,EAAEL,SAAS,CAACG;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,cAAc,GAAGL,YAAY,CAACM,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeL,KAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}