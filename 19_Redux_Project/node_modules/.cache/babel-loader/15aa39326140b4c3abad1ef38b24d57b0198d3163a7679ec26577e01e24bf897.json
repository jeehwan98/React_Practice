{"ast":null,"code":"import { createStore } from 'redux';\nconst redux = require('redux');\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\n\n// create redux store\nconst store = createStore(counterReducer);\nexport default store; // export so that we can use logic outside of this file\n\n// subscriber function\nconst counterSubscriber = () => {\n  const latestState = store.getState();\n  console.log(latestState);\n};\nconst incrementAction = {\n  type: 'increment'\n};\nconst decrementAction = {\n  type: 'decrement'\n};\n\n// subscribe to store changes\nstore.subscribe(counterSubscriber);\nstore.dispatch(incrementAction);\nstore.dispatch(decrementAction);","map":{"version":3,"names":["createStore","redux","require","initialState","counter","showCounter","counterReducer","state","action","type","amount","store","counterSubscriber","latestState","getState","console","log","incrementAction","decrementAction","subscribe","dispatch"],"sources":["/Users/coding_files/PROJECTS/20_Redux_Project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\n\nconst redux = require('redux');\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1\n        };\n    }\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount\n        }\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1\n        };\n    }\n\n    return state;\n}\n\n// create redux store\nconst store = createStore(counterReducer);\n\nexport default store; // export so that we can use logic outside of this file\n\n// subscriber function\nconst counterSubscriber = () => {\n    const latestState = store.getState();\n    console.log(latestState);\n}\n\nconst incrementAction = { type: 'increment' };\nconst decrementAction = { type: 'decrement' };\n\n// subscribe to store changes\nstore.subscribe(counterSubscriber);\n\nstore.dispatch(incrementAction);\nstore.dispatch(decrementAction);"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG;IAC7B,CAAC;EACL;EAEA,IAAII,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACE;IACpC,CAAC;EACL;EAEA,IAAIF,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHL,OAAO,EAAEG,KAAK,CAACH,OAAO,GAAG;IAC7B,CAAC;EACL;EAEA,OAAOG,KAAK;AAChB,CAAC;;AAED;AACA,MAAMI,KAAK,GAAGX,WAAW,CAACM,cAAc,CAAC;AAEzC,eAAeK,KAAK,CAAC,CAAC;;AAEtB;AACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,MAAMC,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC;EACpCC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;AAC5B,CAAC;AAED,MAAMI,eAAe,GAAG;EAAER,IAAI,EAAE;AAAY,CAAC;AAC7C,MAAMS,eAAe,GAAG;EAAET,IAAI,EAAE;AAAY,CAAC;;AAE7C;AACAE,KAAK,CAACQ,SAAS,CAACP,iBAAiB,CAAC;AAElCD,KAAK,CAACS,QAAQ,CAACH,eAAe,CAAC;AAC/BN,KAAK,CAACS,QAAQ,CAACF,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}