{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Counter\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\n\n/* \n * in redux/toolkit -> we're not overwriting the existing code but instead,\n * clone and create a new state object, keep all the state which we're not editing and override the state which we're editing in an immutable way\n * because of this internally used package\n*/\nconst counterSlice = createSlice({\n  // preparing a slice of our global state\n  name: 'counter',\n  // identifier\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport default counterSlice;","map":{"version":3,"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter"],"sources":["/Users/coding_files/PROJECTS/20_Redux_Project/src/store/counter.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// Counter\nconst initialCounterState = {\n    counter: 0,\n    showCounter: true\n};\n\n/* \n * in redux/toolkit -> we're not overwriting the existing code but instead,\n * clone and create a new state object, keep all the state which we're not editing and override the state which we're editing in an immutable way\n * because of this internally used package\n*/\nconst counterSlice = createSlice({ // preparing a slice of our global state\n    name: 'counter', // identifier\n    initialState: initialCounterState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\nexport default counterSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAAE;EAC/BK,IAAI,EAAE,SAAS;EAAE;EACjBC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACpBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}