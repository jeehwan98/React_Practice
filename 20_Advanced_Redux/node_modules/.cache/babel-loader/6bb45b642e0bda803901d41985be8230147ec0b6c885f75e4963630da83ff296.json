{"ast":null,"code":"var _jsxFileName = \"/Users/coding_files/PROJECTS/20_Advanced_Redux/src/App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const showMyCart = useSelector(state => state.cart.showMyCart);\n  const cart = useSelector(state => state.cartSlice);\n  const notification = useSelector(state => state.cart.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    // useEffects allow us to run side effects and run effects when some dependency changes\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]); // cart as a dependency array so that this effect function re-executes whenever the cart changes\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.status,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showMyCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sIMU3fKhbnRVUo4wr5u+rNe6dP8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useDispatch","useSelector","Cart","Layout","Products","Notification","fetchCartData","sendCartData","jsxDEV","_jsxDEV","isInitial","App","_s","dispatch","showMyCart","state","cart","cartSlice","notification","changed","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coding_files/PROJECTS/20_Advanced_Redux/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showMyCart = useSelector((state) => state.cart.showMyCart);\n  const cart = useSelector((state) => state.cartSlice);\n  const notification = useSelector((state) => state.cart.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData())\n  }, [dispatch]);\n\n  useEffect(() => { // useEffects allow us to run side effects and run effects when some dependency changes\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n\n  }, [cart, dispatch]); // cart as a dependency array so that this effect function re-executes whenever the cart changes\n\n  return (\n    <Fragment>\n      {notification && <Notification status={notification.status} title={notification.status} message={notification.message} />}\n      <Layout>\n        {showMyCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,aAAa,EAAEC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,UAAU,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC;EAChE,MAAME,IAAI,GAAGf,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACE,SAAS,CAAC;EACpD,MAAMC,YAAY,GAAGjB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACE,YAAY,CAAC;EAEpEnB,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;EAEdd,SAAS,CAAC,MAAM;IAAE;IAChB,IAAIW,SAAS,EAAE;MACbA,SAAS,GAAG,KAAK;MACjB;IACF;IAEA,IAAIM,IAAI,CAACG,OAAO,EAAE;MAChBN,QAAQ,CAACN,YAAY,CAACS,IAAI,CAAC,CAAC;IAC9B;EAEF,CAAC,EAAE,CAACA,IAAI,EAAEH,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACEJ,OAAA,CAACX,QAAQ;IAAAsB,QAAA,GACNF,YAAY,iBAAIT,OAAA,CAACJ,YAAY;MAACgB,MAAM,EAAEH,YAAY,CAACG,MAAO;MAACC,KAAK,EAAEJ,YAAY,CAACG,MAAO;MAACE,OAAO,EAAEL,YAAY,CAACK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzHlB,OAAA,CAACN,MAAM;MAAAiB,QAAA,GACJN,UAAU,iBAAIL,OAAA,CAACP,IAAI;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvBlB,OAAA,CAACL,QAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf;AAACf,EAAA,CA/BQD,GAAG;EAAA,QACOX,WAAW,EACTC,WAAW,EACjBA,WAAW,EACHA,WAAW;AAAA;AAAA2B,EAAA,GAJzBjB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}