{"ast":null,"code":"import { cartActions } from \"./myCart\";\nimport { cartActionss } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-practice-c0ee8-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActionss.replaceCart(cartData));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    // returns another function\n    dispatch(cartActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-practice-c0ee8-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(cartActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","cartActionss","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","items","totalQuantity"],"sources":["/Users/coding_files/PROJECTS/20_Advanced_Redux/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./myCart\";\nimport { cartActionss } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch(\n                'https://react-practice-c0ee8-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json'\n            );\n\n            if (!response.ok) {\n                throw new Error('Could not fetch cart data!');\n            }\n\n            const data = await response.json();\n\n            return data;\n        };\n\n        try {\n            const cartData = await fetchData();\n            dispatch(cartActionss.replaceCart(cartData));\n        } catch (error) {\n            dispatch(\n                cartActions.showNotification({\n                    status: 'error',\n                    title: 'Error!',\n                    message: 'Fetching cart data failed!',\n                })\n            );\n        }\n    }\n}\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => { // returns another function\n        dispatch(\n            cartActions.showNotification({\n                status: 'pending',\n                title: 'Sending...',\n                message: 'Sending cart data!',\n            })\n        );\n\n        const sendRequest = async () => {\n            const response = await fetch('https://react-practice-c0ee8-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json',\n                {\n                    method: 'PUT',\n                    body: JSON.stringify({\n                        items: cart.items,\n                        totalQuantity: cart.totalQuantity\n                    })\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Sending cart data failed');\n            }\n        };\n\n        try {\n            await sendRequest();\n            dispatch(\n                cartActions.showNotification({\n                    status: 'success',\n                    title: 'Success!',\n                    message: 'Sent cart data successfully!',\n                })\n            );\n        } catch (error) {\n            dispatch(\n                cartActions.showNotification({\n                    status: 'error',\n                    title: 'Error!',\n                    message: 'Sending cart data failed!',\n                })\n            );\n        }\n\n    };\n};"],"mappings":"AAAA,SAASA,WAAW,QAAQ,UAAU;AACtC,SAASC,YAAY,QAAQ,cAAc;AAE3C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,0FACJ,CAAC;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,YAAY,CAACW,WAAW,CAACD,QAAQ,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZV,QAAQ,CACJH,WAAW,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CACL,CAAC;IACL;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOhB,QAAQ,IAAK;IAAE;IACzBA,QAAQ,CACJH,WAAW,CAACc,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CACL,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,0FAA0F,EACnH;QACIe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAEN,IAAI,CAACM,KAAK;UACjBC,aAAa,EAAEP,IAAI,CAACO;QACxB,CAAC;MACL,CACJ,CAAC;MAED,IAAI,CAACrB,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IAED,IAAI;MACA,MAAMY,WAAW,CAAC,CAAC;MACnBjB,QAAQ,CACJH,WAAW,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CACL,CAAC;IACL,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZV,QAAQ,CACJH,WAAW,CAACc,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CACL,CAAC;IACL;EAEJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}