{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { cartActions } from \"./myCart\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n        console.log(state.items);\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCard(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    // returns another function\n    dispatch(cartActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-practice-c0ee8-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(cartActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const cartActionss = cartSlice.actions;\nexport default cartSlice.reducer;\n\n// const initialCartState = {\n//     items: [],\n//     totalQuantity: 0\n// }\n\n// const cartSlice = createSlice({\n//     name: 'cart',\n//     initialState: initialCartState,\n//     reducers: {\n//         addItemToCart(state, action) {\n//             const newItem = action.payload;\n//             const existingItem = state.items.find(item => item.id === newItem.id);\n\n//             if (!existingItem) {\n//                 state.items.push({\n//                     itemId: newItem.id,\n\n//                 })\n//             }\n\n//         }\n//     }\n// })\n\n// export const cartActions = cartSlice.actions;\n// export default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","console","log","removeItemFromCard","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActionss","actions","reducer"],"sources":["/Users/coding_files/PROJECTS/20_Advanced_Redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { cartActions } from \"./myCart\";\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0,\n    },\n    reducers: {\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const existingItem = state.items.find(item => item.id === newItem.id);\n            state.totalQuantity++;\n            if (!existingItem) {\n                state.items.push({\n                    id: newItem.id,\n                    price: newItem.price,\n                    quantity: 1,\n                    totalPrice: newItem.price,\n                    name: newItem.title\n                });\n                console.log(state.items);\n            } else {\n                existingItem.quantity++;\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n            }\n        },\n        removeItemFromCard(state, action) {\n            const id = action.payload;\n            const existingItem = state.items.find(item => item.id === id);\n            if (existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.id !== id);\n            } else {\n                existingItem.quantity--;\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n            }\n        }\n    }\n})\n\nconst sendCartData = (cart) => {\n    return async (dispatch) => { // returns another function\n        dispatch(\n            cartActions.showNotification({\n                status: 'pending',\n                title: 'Sending...',\n                message: 'Sending cart data!',\n            })\n        );\n\n        const sendRequest = async () => {\n            const response = await fetch('https://react-practice-c0ee8-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json',\n                {\n                    method: 'PUT',\n                    body: JSON.stringify(cart)\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Sending cart data failed');\n            }\n        };\n\n        try {\n            await sendRequest();\n            dispatch(\n                cartActions.showNotification({\n                    status: 'success',\n                    title: 'Success!',\n                    message: 'Sent cart data successfully!',\n                })\n            );\n        } catch (error) {\n            dispatch(\n                cartActions.showNotification({\n                    status: 'error',\n                    title: 'Error!',\n                    message: 'Sending cart data failed!',\n                })\n            );\n        }\n\n    };\n};\n\nexport const cartActionss = cartSlice.actions;\nexport default cartSlice.reducer;\n\n// const initialCartState = {\n//     items: [],\n//     totalQuantity: 0\n// }\n\n// const cartSlice = createSlice({\n//     name: 'cart',\n//     initialState: initialCartState,\n//     reducers: {\n//         addItemToCart(state, action) {\n//             const newItem = action.payload;\n//             const existingItem = state.items.find(item => item.id === newItem.id);\n\n//             if (!existingItem) {\n//                 state.items.push({\n//                     itemId: newItem.id,\n\n\n//                 })\n//             }\n\n//         }\n//     }\n// })\n\n// export const cartActions = cartSlice.actions;\n// export default cartSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}