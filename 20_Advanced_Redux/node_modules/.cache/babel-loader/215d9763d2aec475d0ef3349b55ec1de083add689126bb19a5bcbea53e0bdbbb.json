{"ast":null,"code":"var _jsxFileName = \"/Users/coding_files/PROJECTS/20_Advanced_Redux/src/components/Shop/ProductItem.js\",\n  _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { cartItemActions } from '../../store/cartItem';\nimport { cartActionss } from '../../store/cart-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductItem = props => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    title,\n    price,\n    description,\n    id\n  } = props;\n\n  // we want to do all the heavy work in the reducer function\n  // but now, we want to sync our new state to the server (update the server with a new state)\n  // 1. let the redux update the store\n  // 2. send the request to the server\n  // whenever our cart state change, we can send the HTTP request to the backend\n  const addItemHandler = () => {\n    // dispatch(cartItemActions.increment());\n    dispatch(cartActionss.addItemToCart({\n      id,\n      title,\n      price\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addItemHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ProductItem;\nexport default ProductItem;\nvar _c;\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"names":["useDispatch","Card","classes","cartItemActions","cartActionss","jsxDEV","_jsxDEV","ProductItem","props","_s","dispatch","title","price","description","id","addItemHandler","addItemToCart","className","item","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","actions","onClick","_c","$RefreshReg$"],"sources":["/Users/coding_files/PROJECTS/20_Advanced_Redux/src/components/Shop/ProductItem.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\nimport { cartItemActions } from '../../store/cartItem';\nimport { cartActionss } from '../../store/cart-slice';\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, price, description, id } = props;\n\n\n  // we want to do all the heavy work in the reducer function\n  // but now, we want to sync our new state to the server (update the server with a new state)\n  // 1. let the redux update the store\n  // 2. send the request to the server\n  // whenever our cart state change, we can send the HTTP request to the backend\n  const addItemHandler = () => {\n    // dispatch(cartItemActions.increment());\n    dispatch(cartActionss.addItemToCart({\n      id,\n      title,\n      price,\n    }));\n  }\n\n\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addItemHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,YAAY,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW,KAAK;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAG,CAAC,GAAGN,KAAK;;EAG/C;EACA;EACA;EACA;EACA;EACA,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACAL,QAAQ,CAACN,YAAY,CAACY,aAAa,CAAC;MAClCF,EAAE;MACFH,KAAK;MACLC;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAID,oBACEN,OAAA;IAAIW,SAAS,EAAEf,OAAO,CAACgB,IAAK;IAAAC,QAAA,eAC1Bb,OAAA,CAACL,IAAI;MAAAkB,QAAA,gBACHb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKR;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChBjB,OAAA;UAAKW,SAAS,EAAEf,OAAO,CAACU,KAAM;UAAAO,QAAA,GAAC,GAAC,EAACP,KAAK,CAACY,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACTjB,OAAA;QAAAa,QAAA,EAAIN;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBjB,OAAA;QAAKW,SAAS,EAAEf,OAAO,CAACuB,OAAQ;QAAAN,QAAA,eAC9Bb,OAAA;UAAQoB,OAAO,EAAEX,cAAe;UAAAI,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAET,CAAC;AAACd,EAAA,CAnCIF,WAAW;EAAA,QACEP,WAAW;AAAA;AAAA2B,EAAA,GADxBpB,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}